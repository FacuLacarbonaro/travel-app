[{"D:\\Projects\\travel-app\\client\\src\\index.js":"1","D:\\Projects\\travel-app\\client\\src\\App.js":"2","D:\\Projects\\travel-app\\client\\src\\api\\Api.js":"3","D:\\Projects\\travel-app\\client\\src\\Components\\LogEntryForm\\LogEntryForm.jsx":"4","D:\\Projects\\travel-app\\client\\src\\Components\\Sidebar\\Sidebar.jsx":"5","D:\\Projects\\travel-app\\client\\src\\Components\\PopUp\\PopUpEdit.jsx":"6"},{"size":220,"mtime":1607436129125,"results":"7","hashOfConfig":"8"},{"size":6115,"mtime":1607536035904,"results":"9","hashOfConfig":"8"},{"size":626,"mtime":1607710822542,"results":"10","hashOfConfig":"8"},{"size":1495,"mtime":1607536127461,"results":"11","hashOfConfig":"8"},{"size":964,"mtime":1607536332232,"results":"12","hashOfConfig":"8"},{"size":3198,"mtime":1607538131408,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13ri7uq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"D:\\Projects\\travel-app\\client\\src\\index.js",[],["31","32"],"D:\\Projects\\travel-app\\client\\src\\App.js",["33","34"],"import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup, FlyToInterpolator } from \"react-map-gl\";\nimport { listLogEntries } from \"./api/Api\";\nimport LogEntryForm from \"./Components/LogEntryForm/LogEntryForm.jsx\";\nimport { easeCubic } from \"d3-ease\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport PopUpEdit from \"./Components/PopUp/PopUpEdit.jsx\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [popUpOpen, setPopUpOpen] = useState(false);\n  const [viewport, setViewport] = useState({\n    width: \"80%\",\n    height: \"100%\",\n    latitude: 0,\n    longitude: 0,\n    zoom: 2,\n  });\n\n  const getEntries = async () => {\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showAddMarkerPopup = (e) => {\n    const [longitude, latitude] = e.lngLat;\n    setAddEntryLocation({\n      longitude,\n      latitude,\n    });\n  };\n\n  const flyTo = (e, entry) => {\n    e.preventDefault();\n\n    let longitude = entry.longitude;\n    let latitude = entry.latitude;\n\n    const newView = {\n      ...viewport,\n      latitude,\n      longitude,\n      zoom: 10,\n      transitionDuration: 5000,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic,\n    };\n\n    setViewport(newView);\n    setShowPopup({\n      ...showPopup,\n      [entry._id]: true,\n    });\n  };\n\n  let Entries = logEntries.data || [];\n\n  return (\n    <div className=\"app\">\n      <ReactMapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/faculacarbonaro/ckidhkgwk2fg819pbglqo4n12\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        onViewportChange={(nextViewport) => setViewport(nextViewport)}\n        onDblClick={showAddMarkerPopup}\n      >\n        {Entries.map((entry) => (\n          <React.Fragment key={entry._id}>\n            <Marker latitude={entry.latitude} longitude={entry.longitude}>\n              <div\n                onClick={() =>\n                  setShowPopup({\n                    ...showPopup,\n                    [entry._id]: true,\n                  })\n                }\n              >\n                <svg\n                  className=\"marker yellow\"\n                  style={{\n                    height: `${6 * viewport.zoom}px`,\n                    width: `${6 * viewport.zoom}px`,\n                  }}\n                  version=\"1.1\"\n                  id=\"Layer_1\"\n                  x=\"0px\"\n                  y=\"0px\"\n                  viewBox=\"0 0 512 512\"\n                >\n                  <g>\n                    <g>\n                      <path\n                        d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035\n                        c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719\n                        c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\"\n                      />\n                    </g>\n                  </g>\n                </svg>\n              </div>\n            </Marker>\n            {showPopup[entry._id] ? (\n              <Popup\n                latitude={entry.latitude}\n                longitude={entry.longitude}\n                closeButton={true}\n                closeOnClick={false}\n                dynamicPosition={true}\n                onClose={() =>\n                  setShowPopup({\n                    ...showPopup,\n                    [entry._id]: false,\n                  })\n                }\n                anchor=\"top\"\n              >\n                <PopUpEdit entry={entry} />\n              </Popup>\n            ) : null}\n          </React.Fragment>\n        ))}\n\n        {addEntryLocation ? (\n          <>\n            <Marker\n              latitude={addEntryLocation.latitude}\n              longitude={addEntryLocation.longitude}\n            >\n              <div>\n                <svg\n                  className=\"marker yellow\"\n                  style={{\n                    height: `${6 * viewport.zoom}px`,\n                    width: `${6 * viewport.zoom}px`,\n                  }}\n                  version=\"1.1\"\n                  id=\"Layer_1\"\n                  x=\"0px\"\n                  y=\"0px\"\n                  viewBox=\"0 0 512 512\"\n                >\n                  <g>\n                    <g>\n                      <path\n                        d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035\n                        c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719\n                        c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\"\n                      />\n                    </g>\n                  </g>\n                </svg>\n              </div>\n            </Marker>\n\n            <Popup\n              latitude={addEntryLocation.latitude}\n              longitude={addEntryLocation.longitude}\n              closeButton={true}\n              closeOnClick={false}\n              dynamicPosition={true}\n              anchor=\"top\"\n              onClose={() => setAddEntryLocation(null)}\n            >\n              <div className=\"popup\">\n                <LogEntryForm\n                  onClose={() => {\n                    setAddEntryLocation(null);\n                    getEntries();\n                  }}\n                  location={addEntryLocation}\n                  \n                />\n              </div>\n            </Popup>\n          </>\n        ) : null}\n      </ReactMapGL>\n      <Sidebar\n        setLogEntries={setLogEntries}\n        logEntries={logEntries}\n        onClose={() => {\n          setAddEntryLocation(null);\n          getEntries();\n        }}\n        flyTo={flyTo}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","D:\\Projects\\travel-app\\client\\src\\api\\Api.js",[],"D:\\Projects\\travel-app\\client\\src\\Components\\LogEntryForm\\LogEntryForm.jsx",["35","36"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createLogEntry } from \"../../api/Api\";\r\n\r\nimport \"./LogEntryForm.scss\";\r\n\r\nconst LogEntryForm = ({ location, onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    data.latitude = location.latitude;\r\n    data.longitude = location.longitude;\r\n    const createdLog = await createLogEntry(data);\r\n    console.log(createdLog);\r\n    createLogEntry(createdLog);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <form className=\"entryForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      {error ? <h3>{error}</h3> : null}\r\n      <label for=\"title\">Title</label>\r\n      <input type=\"text\" name=\"title\" required ref={register} />\r\n      <label for=\"comments\">Comments</label>\r\n      <input type=\"text\" name=\"comments\" ref={register} />\r\n      <label for=\"description\">Description</label>\r\n      <textarea type=\"text\" name=\"description\" ref={register} />\r\n      <label for=\"image\">Image (url)</label>\r\n      <input type=\"text\" name=\"image\" alt=\"\" ref={register} />\r\n      <label for=\"visitDate\">Visit Date</label>\r\n      <input type=\"date\" name=\"visitDate\" required ref={register} />\r\n      <button className=\"entryForm__button\" disabled={loading}>\r\n        {loading ? \"Loading...\" : \"Create Entry\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LogEntryForm;\r\n","D:\\Projects\\travel-app\\client\\src\\Components\\Sidebar\\Sidebar.jsx",["37"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Sidebar.scss\";\r\nimport { deleteLogEntry } from \"../../api/Api\";\r\n\r\nconst Sidebar = ({ logEntries, onClose, flyTo }) => {\r\n  let Entries = logEntries.data || [];\r\n\r\n  const deleteLocation = async (e, entry) => {\r\n    e.preventDefault();\r\n    let idToDelete = entry._id;\r\n    deleteLogEntry(idToDelete);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>Locations saved</h3>\r\n      <ul>\r\n        {Entries.map((entry) => (\r\n          <div className=\"sidebar__item\" key={entry._id}>\r\n            <li onClick={(e) => flyTo(e, entry)}>\r\n              <h4>{entry.title}</h4>\r\n            </li>\r\n            <button onClick={(e) => deleteLocation(e, entry)}>X </button>\r\n          </div>\r\n        ))}\r\n      </ul>\r\n      <div className=\"sidebar__help\">\r\n        <h4>Double click on Map to save a new Location</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\Projects\\travel-app\\client\\src\\Components\\PopUp\\PopUpEdit.jsx",["38","39"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { updateEntry } from \"../../api/Api\";\r\n\r\nimport \"./PopUpEdit.scss\";\r\n\r\nconst PopUp = ({ entry }) => {\r\n  const [edit, setEdit] = useState(true);\r\n  const { register, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [newData, setNewData] = useState(entry);\r\n  const handleInputChange = (event) => {\r\n    // console.log(event.target.name)\r\n    // console.log(event.target.value)\r\n    setNewData({\r\n      ...newData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const updated = await updateEntry(newData);\r\n    updateEntry(updated);\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      {edit ? (\r\n        <div className=\"popup__complete\">\r\n          <h3>{entry.title}</h3>\r\n          <p>{entry.comments}</p>\r\n          <p>{entry.description}</p>\r\n          {entry.image && <img src={entry.image} alt={entry.title} />}\r\n          <small>\r\n            Visited on: {new Date(entry.visitDate).toLocaleDateString()}\r\n          </small>\r\n          <button onClick={(e) => setEdit(false)}>Edit</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <form\r\n            className=\"entryForm\"\r\n            onSubmit={(e) => handleSubmit(onSubmit(e))}\r\n          >\r\n            {error ? <h3>{error}</h3> : null}\r\n            <label for=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              defaultValue={entry.title}\r\n              required\r\n              ref={register}\r\n              onChange={handleInputChange}\r\n            />\r\n            <label for=\"comments\">Comments</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"comments\"\r\n              defaultValue={entry.comments}\r\n              onChange={handleInputChange}\r\n              ref={register}\r\n            />\r\n            <label for=\"description\">Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              defaultValue={entry.description}\r\n              ref={register}\r\n            />\r\n            <label for=\"image\">Image (url)</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"image\"\r\n              defaultValue={entry.image}\r\n              alt=\"\"\r\n              onChange={handleInputChange}\r\n              ref={register}\r\n            />\r\n            <label for=\"visitDate\">Visit Date</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"visitDate\"\r\n              required\r\n              ref={register}\r\n              onChange={handleInputChange}\r\n            />\r\n            <button className=\"entryForm__button\" disabled={loading}>\r\n              {loading ? \"Loading...\" : \"Save new Entry\"}\r\n            </button>\r\n            <button\r\n              className=\"entryForm__button\"\r\n              onClick={(e) => setEdit(true)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":15,"column":10,"nodeType":"46","messageId":"47","endLine":15,"endColumn":19},{"ruleId":"44","severity":1,"message":"48","line":15,"column":21,"nodeType":"46","messageId":"47","endLine":15,"endColumn":33},{"ruleId":"44","severity":1,"message":"49","line":8,"column":19,"nodeType":"46","messageId":"47","endLine":8,"endColumn":29},{"ruleId":"44","severity":1,"message":"50","line":9,"column":17,"nodeType":"46","messageId":"47","endLine":9,"endColumn":25},{"ruleId":"44","severity":1,"message":"51","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":13},{"ruleId":"44","severity":1,"message":"49","line":10,"column":19,"nodeType":"46","messageId":"47","endLine":10,"endColumn":29},{"ruleId":"44","severity":1,"message":"50","line":11,"column":17,"nodeType":"46","messageId":"47","endLine":11,"endColumn":25},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'popUpOpen' is assigned a value but never used.","Identifier","unusedVar","'setPopUpOpen' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]